{"version":3,"sources":["../node_modules/web-vitals/dist/web-vitals.es5.min.js","../src/get-type/index.js","../src/number/index.js","../src/assets/index.js","../src/connection/index.js","../src/display/index.js","../src/dom/index.js","../src/snake-case/index.js","../src/memory/index.js","../src/navigation/index.js","../src/paint/index.js","../src/all/index.js","../src/fps/index.js","../src/measure/index.js","../src/index.js","script.js"],"names":["t","n","e","concat","Date","now","Math","floor","random","i","name","value","arguments","length","delta","entries","id","isFinal","a","PerformanceObserver","supportedEntryTypes","includes","getEntries","map","observe","type","buffered","r","o","s","persisted","u","addEventListener","c","timeStamp","document","visibilityState","isUnloading","capture","once","l","disconnect","p","hadRecentInput","push","takeRecords","d","v","startTime","m","processingStart","window","perfMetrics","onFirstInputDelay","entryType","target","cancelable","f","Promise","passive","g","then","h","performance","getEntriesByType","timing","max","navigationStart","responseStart","readyState","setTimeout","extensionPattern","IMAGES","JAVASCRIPT","STYLESHEETS","OTHER","typePatterns","pattern","get","source","fallback","match","pop","initiators","img","image","script","getType","initiatorType","Object","hasOwnProperty","call","extension","find","number","input","Number","parseFloat","isNaN","isFinite","FINAL_ASSET_PREFIX","assets","metrics","key","forEach","entry","add","duration","decodedBodySize","undefined","accumulator","field","join","connection","navigator","connection_type","effective_bandwidth","downlink","effective_connection_type","effectiveType","effective_max_bandwidth","downlinkMax","reduced_data_usage","saveData","round_trip_time","rtt","display","result","window_inner_height","innerHeight","window_inner_width","innerWidth","screen","assign","screen_color_depth","colorDepth","screen_pixel_depth","pixelDepth","screen_orientation_type","orientation","getMaxNestLevel","depth","querySelector","repeat","dom","final_dom_node_count","querySelectorAll","final_dom_nest_depth","final_html_size","outerHTML","error","snakeCase","str","replace","toLowerCase","METRICS","memory","metric","navigation","navigationEntries","filter","start","timeOrigin","reduce","paint","all","fps","sample","resolve","requestAnimationFrame","end","frames","count","measure","fn","unique","toString","substr","suffix","mark","clearMarks","getLCP","getFID","getCLS"],"mappings":"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","file":"script.3485b38b.js","sourceRoot":"../play","sourcesContent":["var t,n,e=function(){return\"\".concat(Date.now(),\"-\").concat(Math.floor(8999999999999*Math.random())+1e12)},i=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return{name:t,value:n,delta:0,entries:[],id:e(),isFinal:!1}},a=function(t,n){try{if(PerformanceObserver.supportedEntryTypes.includes(t)){var e=new PerformanceObserver((function(t){return t.getEntries().map(n)}));return e.observe({type:t,buffered:!0}),e}}catch(t){}},r=!1,o=!1,s=function(t){r=!t.persisted},u=function(){addEventListener(\"pagehide\",s),addEventListener(\"unload\",(function(){}))},c=function(t){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];o||(u(),o=!0),addEventListener(\"visibilitychange\",(function(n){var e=n.timeStamp;\"hidden\"===document.visibilityState&&t({timeStamp:e,isUnloading:r})}),{capture:!0,once:n})},l=function(t,n,e,i){var a;return function(){e&&n.isFinal&&e.disconnect(),n.value>=0&&(i||n.isFinal||\"hidden\"===document.visibilityState)&&(n.delta=n.value-(a||0),(n.delta||n.isFinal||void 0===a)&&(t(n),a=n.value))}},p=function(t){var n,e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=i(\"CLS\",0),o=function(t){t.hadRecentInput||(r.value+=t.value,r.entries.push(t),n())},s=a(\"layout-shift\",o);s&&(n=l(t,r,s,e),c((function(t){var e=t.isUnloading;s.takeRecords().map(o),e&&(r.isFinal=!0),n()})))},d=function(){return void 0===t&&(t=\"hidden\"===document.visibilityState?0:1/0,c((function(n){var e=n.timeStamp;return t=e}),!0)),{get timeStamp(){return t}}},v=function(t){var n,e=i(\"FCP\"),r=d(),o=a(\"paint\",(function(t){\"first-contentful-paint\"===t.name&&t.startTime<r.timeStamp&&(e.value=t.startTime,e.isFinal=!0,e.entries.push(t),n())}));o&&(n=l(t,e,o))},m=function(t){var n=i(\"FID\"),e=d(),r=function(t){t.startTime<e.timeStamp&&(n.value=t.processingStart-t.startTime,n.entries.push(t),n.isFinal=!0,s())},o=a(\"first-input\",r),s=l(t,n,o);o?c((function(){o.takeRecords().map(r),o.disconnect()}),!0):window.perfMetrics&&window.perfMetrics.onFirstInputDelay&&window.perfMetrics.onFirstInputDelay((function(t,i){i.timeStamp<e.timeStamp&&(n.value=t,n.isFinal=!0,n.entries=[{entryType:\"first-input\",name:i.type,target:i.target,cancelable:i.cancelable,startTime:i.timeStamp,processingStart:i.timeStamp+t}],s())}))},f=function(){return n||(n=new Promise((function(t){return[\"scroll\",\"keydown\",\"pointerdown\"].map((function(n){addEventListener(n,t,{once:!0,passive:!0,capture:!0})}))}))),n},g=function(t){var n,e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=i(\"LCP\"),o=d(),s=function(t){var e=t.startTime;e<o.timeStamp?(r.value=e,r.entries.push(t)):r.isFinal=!0,n()},u=a(\"largest-contentful-paint\",s);if(u){n=l(t,r,u,e);var p=function(){r.isFinal||(u.takeRecords().map(s),r.isFinal=!0,n())};f().then(p),c(p,!0)}},h=function(t){var n,e=i(\"TTFB\");n=function(){try{var n=performance.getEntriesByType(\"navigation\")[0]||function(){var t=performance.timing,n={entryType:\"navigation\",startTime:0};for(var e in t)\"navigationStart\"!==e&&\"toJSON\"!==e&&(n[e]=Math.max(t[e]-t.navigationStart,0));return n}();e.value=e.delta=n.responseStart,e.entries=[n],e.isFinal=!0,t(e)}catch(t){}},\"complete\"===document.readyState?setTimeout(n,0):addEventListener(\"pageshow\",n)};export{p as getCLS,v as getFCP,m as getFID,g as getLCP,h as getTTFB};\n","/**\n * @type {RegExp}\n */\nconst extensionPattern = /\\.(\\w{2,5})(?:$|\\?.*)/;\n\n/**\n * @type {string}\n */\nconst IMAGES = 'images';\n\n/**\n * @type {string}\n */\nconst JAVASCRIPT = 'javascript';\n\n/**\n * @type {string}\n */\nconst STYLESHEETS = 'stylesheets';\n\n/**\n * @type {string}\n */\nconst OTHER = 'other';\n\n/**\n * @type {RegExp}\n */\nconst typePatterns = [\n    { type: IMAGES, pattern: /jpe?g|gif|png|webm/i },\n    { type: JAVASCRIPT, pattern: /[m|c]?js/i },\n    { type: STYLESHEETS, pattern: /css/i }\n];\n\n/**\n * @param {string}\n * @param {RegExp}\n * @param {any}\n * @returns {object}\n */\nfunction get(source, pattern, fallback = '') {\n    const match = source.match(pattern);\n\n    return match && match.pop() || fallback;\n}\n\n/**\n * @type {object}\n * @property {string} img\n * @property {string} script\n */\nconst initiators = {\n    img: IMAGES,\n    image: IMAGES,\n    script: JAVASCRIPT\n};\n\n/**\n * @param {string} o.initiatorType\n * @param {string} o.name\n * @returns {string} (images, javascript, stylesheets, other)\n */\nexport function getType({ initiatorType, name }) {\n    if (Object.hasOwnProperty.call(initiators, initiatorType)) {\n        return initiators[initiatorType];\n    }\n    const extension = get(name, extensionPattern);\n    const { type } = typePatterns.find(\n        ({ pattern }) => get(extension, pattern)\n    ) || { type: OTHER };\n\n    return type;\n}\n","/**\n * @param {number}\n * @returns {number?}\n */\nexport function number(input) {\n    if (typeof input !== 'number') {\n        return;\n    }\n\n    const value = Number.parseFloat(input);\n\n    if (Number.isNaN(value)) {\n        return;\n    }\n\n    if (value < 0) {\n        return;\n    }\n\n    if (Number.isFinite(value)) {\n        return value;\n    }\n}\n","import { getType } from '../get-type';\nimport { number } from '../number';\n\nconst FINAL_ASSET_PREFIX = 'final_asset';\n\n/**\n * @returns {object}\n */\nexport function assets() {\n    if (!window.performance || !window.performance.getEntriesByType) {\n        return {};\n    }\n\n    const metrics = {};\n\n    window.performance.getEntriesByType('resource').forEach(\n        (entry) => {\n            const type = getType(entry);\n\n            add(metrics, type, 'count', 1);\n            add(metrics, type, 'load', entry.duration);\n            add(metrics, type, 'size', entry.decodedBodySize);\n        }\n    );\n\n    for (const key in metrics) {\n        if (Number.isNaN(metrics[key])) {\n            metrics[key] = undefined;\n        }\n    }\n\n    return metrics;\n}\n\n/**\n * Mutating\n * @param {object} accumulator\n * @param {string} type\n * @param {string} key\n * @param {number} value\n * @returns {void}\n */\nfunction add(accumulator, type, key, value) {\n    const field = [FINAL_ASSET_PREFIX, type, key].join('_');\n\n    accumulator[field] = accumulator[field] || 0;\n    accumulator[field] += number(value) || 0;\n}\n","import { number } from '../number';\n\n/**\n * @see [NetworkInformation](https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation)\n * @returns {object}\n */\nexport function connection() {\n    const { connection } = window.navigator || {};\n    if (!connection) {\n        return {};\n    }\n\n    return {\n        connection_type: connection.type, // bluetooth, cellular, ethernet, none, wifi, wimax, other, unknown\n        effective_bandwidth: number(connection.downlink), // MBsS\n        effective_connection_type: connection.effectiveType, // slow-2g, 2g, 3g, 4g\n        effective_max_bandwidth: number(connection.downlinkMax), // MBsS\n        reduced_data_usage: connection.saveData, // boolean\n        round_trip_time: number(connection.rtt)\n    };\n}\n","import { number } from '../number';\n\n/**\n * @returns {object}\n */\nexport function display() {\n    const result = {\n        window_inner_height: number(window.innerHeight),\n        window_inner_width: number(window.innerWidth)\n    };\n\n    const { screen } = window;\n    screen && Object.assign(result, {\n        screen_color_depth: number(screen.colorDepth),\n        screen_pixel_depth: number(screen.pixelDepth),\n        screen_orientation_type: screen.orientation && screen.orientation.type\n    });\n\n    return result;\n}\n","import { number } from '../number';\n\n/**\n * getMaxNestLevel: Determine the largest DOM depth in the document or under a base element\n * @param {number} [depth=2] Used for recursion\n * @returns {number}\n */\nfunction getMaxNestLevel(depth = 1) {\n    return document.querySelector(`${'*>'.repeat(depth)}*`)\n        ? getMaxNestLevel(depth + 1)\n        : depth;\n}\n\n/**\n * Get stats on a DOM tree safely\n * @returns {object}\n */\nexport function dom() {\n    try {\n        return {\n            final_dom_node_count: number(document.querySelectorAll('*').length),\n            final_dom_nest_depth: number(getMaxNestLevel()),\n            final_html_size: number(document.querySelector('html').outerHTML.length)\n        };\n    } catch (error) {\n        return {\n            final_dom_node_count: undefined,\n            final_dom_nest_depth: undefined,\n            final_html_size: undefined\n        };\n    }\n}\n","/**\n * @param {string}\n * @returns {string}\n */\nexport const snakeCase = (str) => str\n    .replace(/([A-Z])/g, '_$1')\n    .replace(/-/g, '_')\n    .toLowerCase()\n    .replace(/_j_s_/g, '_js_');\n","import { number } from '../number';\nimport { snakeCase } from '../snake-case';\n\n/**\n * @type {string[]}\n */\nconst METRICS = [\n    'jsHeapSizeLimit',\n    'totalJSHeapSize',\n    'usedJSHeapSize'\n];\n\n/**\n * @returns {object}\n */\nexport function memory() {\n    const { memory } = window.performance || {};\n    if (!memory) {\n        return {};\n    }\n\n    return Object.assign(\n        ...METRICS.map(\n            (metric) => ({ [snakeCase(metric)]: number(memory[metric]) })\n        )\n    );\n}\n","import { number } from '../number';\nimport { snakeCase } from '../snake-case';\n\n/**\n * @type {string[]}\n */\nconst METRICS = [\n    'connectEnd',\n    'connectStart',\n    'decodedBodySize',\n    'domainLookupEnd',\n    'domainLookupStart',\n    'domComplete',\n    'domContentLoadedEventEnd',\n    'domContentLoadedEventStart',\n    'domInteractive',\n    'domLoading',\n    'encodedBodySize',\n    'fetchStart',\n    'loadEventEnd',\n    'loadEventStart',\n    'navigationStart',\n    'redirectEnd',\n    'redirectStart',\n    'requestStart',\n    'responseEnd',\n    'responseStart',\n    'secureConnectionStart',\n    'transferSize',\n    'unloadEventEnd',\n    'unloadEventStart'\n];\n\n/**\n * @returns {object}\n */\nexport function navigation() {\n    const { performance } = window;\n    if (!performance || !performance.getEntriesByType) {\n        return {};\n    }\n\n    const navigationEntries = performance.getEntriesByType('navigation');\n\n    // PerformanceNavigationTiming interface\n    if (navigationEntries.length) {\n        return Object.assign(\n            {},\n            ...[].concat(\n                ...navigationEntries.map(\n                    (entry) => METRICS.filter(\n                        (metric) => !Number.isNaN(entry[metric])\n                    ).map(\n                        (metric) => ({ [snakeCase(metric)]: number(entry[metric]) })\n                    )\n                )\n            )\n        );\n    }\n\n    // Fall back to obsolete PerformanceTiming interface\n    const { timing } = performance;\n    if (!timing) { return {}; }\n\n    const start = performance.timeOrigin || timing.navigationStart;\n    if (!start) { return {}; }\n\n    return METRICS.reduce(\n        (accumulator, metric) => {\n            const value = timing[metric] - start;\n            accumulator[snakeCase(metric)] = value < 0\n                ? undefined\n                : number(value)\n            ;\n\n            return accumulator;\n        },\n        {}\n    );\n}\n","import { number } from '../number';\nimport { snakeCase } from '../snake-case';\n\n/**\n * Retrieve all paint entries\n * @returns {object}\n */\nexport function paint() {\n    const { performance } = window;\n\n    if (!performance || !performance.getEntriesByType) {\n        return {};\n    }\n\n    return Object.assign(\n        {},\n        ...[].concat(\n            ...performance.getEntriesByType('paint').map(\n                ({ name, startTime }) => ({ [snakeCase(name)]: number(startTime) })\n            )\n        )\n    );\n}\n","import { navigation } from '../navigation';\nimport { paint } from '../paint';\nimport { assets } from '../assets';\nimport { connection } from '../connection';\nimport { memory } from '../memory';\nimport { display } from '../display';\nimport { dom } from '../dom';\n\n/**\n * @returns {object}\n */\nexport const all = () => Object.assign(\n    {},\n    navigation(),\n    paint(),\n    assets(),\n    connection(),\n    memory(),\n    display(),\n    dom()\n);\n","/**\n * Check window frames per second rate\n * @param {number} sample Number of seconds to check\n * @returns {number?}\n */\nexport function fps({ sample = 1 } = {}) {\n    return new Promise(\n        ((resolve) => {\n            const { requestAnimationFrame } = window;\n            if (!requestAnimationFrame) {\n                resolve(undefined);\n            }\n\n            const start = window.performance.now();\n            const end = start + (1000 * sample);\n            let frames = 0;\n            requestAnimationFrame(count);\n\n            function count() {\n                if (window.performance.now() > end) {\n                    resolve(frames / sample);\n                } else {\n                    ++frames;\n                    requestAnimationFrame(count);\n                }\n            }\n        })\n    );\n}\n","/**\n * Add a 'measure' entry measuring the execution of a function\n * @param  {Function} fn\n * @param  {String}   name\n * @return {Any}           original method return value\n */\nexport async function measure(fn, name) {\n    const { performance } = window;\n    const unique = Math.random().toString(32).substr(2);\n\n    const [start, end] = ['start', 'end'].map(\n        (suffix) => [name, suffix, unique].join('-')\n    );\n\n    performance.mark(start);\n    const result = await fn();\n\n    performance.mark(end);\n    performance.measure(name, start, end);\n    performance.clearMarks(start);\n    performance.clearMarks(end);\n\n    return result;\n}\n","export { assets } from './assets';\nexport { connection } from './connection';\nexport { display } from './display';\nexport { dom } from './dom';\nexport { memory } from './memory';\nexport { navigation } from './navigation';\nexport { paint } from './paint';\n\nexport { all } from './all';\nexport { fps } from './fps';\nexport { measure } from './measure';\n","import { getLCP, getFID, getCLS } from 'web-vitals';\nimport { measure, fps, all } from '../src/index.js';\n\nObject.assign(\n    window,\n    { measure, fps, all, getLCP, getFID, getCLS }\n);\n"]}