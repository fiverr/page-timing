{"version":3,"sources":["../src/get-type/index.js","../src/number/index.js","../src/assets/index.js","../src/connection/index.js","../src/display/index.js","../src/dom/index.js","../src/snake-case/index.js","../src/memory/index.js","../src/navigation/index.js","../src/paint/index.js","../src/all/index.js","../src/fps/index.js","../src/measure/index.js","../src/index.js","script.js"],"names":["extensionPattern","IMAGES","JAVASCRIPT","STYLESHEETS","OTHER","typePatterns","type","pattern","get","source","fallback","match","pop","initiators","img","image","script","getType","initiatorType","name","Object","hasOwnProperty","call","extension","find","number","input","value","Number","parseFloat","isNaN","isFinite","FINAL_ASSET_PREFIX","assets","window","performance","getEntriesByType","metrics","forEach","entry","add","duration","decodedBodySize","key","undefined","accumulator","field","join","connection","navigator","connection_type","effective_bandwidth","downlink","effective_connection_type","effectiveType","effective_max_bandwidth","downlinkMax","reduced_data_usage","saveData","round_trip_time","rtt","display","result","window_inner_height","innerHeight","window_inner_width","innerWidth","screen","assign","screen_color_depth","colorDepth","screen_pixel_depth","pixelDepth","screen_orientation_type","orientation","getMaxNestLevel","depth","document","querySelector","repeat","dom","final_dom_node_count","querySelectorAll","length","final_dom_nest_depth","final_html_size","outerHTML","error","snakeCase","str","replace","toLowerCase","METRICS","memory","map","metric","navigation","navigationEntries","concat","filter","timing","start","timeOrigin","navigationStart","reduce","paint","startTime","all","fps","sample","Promise","resolve","requestAnimationFrame","now","end","frames","count","measure","fn","unique","Math","random","toString","substr","suffix","mark","clearMarks"],"mappings":"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","file":"script.e590495f.js","sourceRoot":"../play","sourcesContent":["/**\n * @type {RegExp}\n */\nconst extensionPattern = /\\.(\\w{2,5})(?:$|\\?.*)/;\n\n/**\n * @type {string}\n */\nconst IMAGES = 'images';\n\n/**\n * @type {string}\n */\nconst JAVASCRIPT = 'javascript';\n\n/**\n * @type {string}\n */\nconst STYLESHEETS = 'stylesheets';\n\n/**\n * @type {string}\n */\nconst OTHER = 'other';\n\n/**\n * @type {RegExp}\n */\nconst typePatterns = [\n    { type: IMAGES, pattern: /jpe?g|gif|png|webm/i },\n    { type: JAVASCRIPT, pattern: /[m|c]?js/i },\n    { type: STYLESHEETS, pattern: /css/i }\n];\n\n/**\n * @param {string}\n * @param {RegExp}\n * @param {any}\n * @returns {object}\n */\nfunction get(source, pattern, fallback = '') {\n    const match = source.match(pattern);\n\n    return match && match.pop() || fallback;\n}\n\n/**\n * @type {object}\n * @property {string} img\n * @property {string} script\n */\nconst initiators = {\n    img: IMAGES,\n    image: IMAGES,\n    script: JAVASCRIPT\n};\n\n/**\n * @param {string} o.initiatorType\n * @param {string} o.name\n * @returns {string} (images, javascript, stylesheets, other)\n */\nexport function getType({ initiatorType, name }) {\n    if (Object.hasOwnProperty.call(initiators, initiatorType)) {\n        return initiators[initiatorType];\n    }\n    const extension = get(name, extensionPattern);\n    const { type } = typePatterns.find(\n        ({ pattern }) => get(extension, pattern)\n    ) || { type: OTHER };\n\n    return type;\n}\n","/**\n * @param {number}\n * @returns {number?}\n */\nexport function number(input) {\n    if (typeof input !== 'number') {\n        return;\n    }\n\n    const value = Number.parseFloat(input);\n\n    if (Number.isNaN(value)) {\n        return;\n    }\n\n    if (value < 0) {\n        return;\n    }\n\n    if (Number.isFinite(value)) {\n        return value;\n    }\n}\n","import { getType } from '../get-type';\nimport { number } from '../number';\n\nconst FINAL_ASSET_PREFIX = 'final_asset';\n\n/**\n * @returns {object}\n */\nexport function assets() {\n    if (!window.performance || !window.performance.getEntriesByType) {\n        return {};\n    }\n\n    const metrics = {};\n\n    window.performance.getEntriesByType('resource').forEach(\n        (entry) => {\n            const type = getType(entry);\n\n            add(metrics, type, 'count', 1);\n            add(metrics, type, 'load', entry.duration);\n            add(metrics, type, 'size', entry.decodedBodySize);\n        }\n    );\n\n    for (const key in metrics) {\n        if (Number.isNaN(metrics[key])) {\n            metrics[key] = undefined;\n        }\n    }\n\n    return metrics;\n}\n\n/**\n * Mutating\n * @param {object} accumulator\n * @param {string} type\n * @param {string} key\n * @param {number} value\n * @returns {void}\n */\nfunction add(accumulator, type, key, value) {\n    const field = [FINAL_ASSET_PREFIX, type, key].join('_');\n\n    accumulator[field] = accumulator[field] || 0;\n    accumulator[field] += number(value) || 0;\n}\n","import { number } from '../number';\n\n/**\n * @see [NetworkInformation](https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation)\n * @returns {object}\n */\nexport function connection() {\n    const { connection } = window.navigator || {};\n    if (!connection) {\n        return {};\n    }\n\n    return {\n        connection_type: connection.type, // bluetooth, cellular, ethernet, none, wifi, wimax, other, unknown\n        effective_bandwidth: number(connection.downlink), // MBsS\n        effective_connection_type: connection.effectiveType, // slow-2g, 2g, 3g, 4g\n        effective_max_bandwidth: number(connection.downlinkMax), // MBsS\n        reduced_data_usage: connection.saveData, // boolean\n        round_trip_time: number(connection.rtt)\n    };\n}\n","import { number } from '../number';\n\n/**\n * @returns {object}\n */\nexport function display() {\n    const result = {\n        window_inner_height: number(window.innerHeight),\n        window_inner_width: number(window.innerWidth)\n    };\n\n    const { screen } = window;\n    screen && Object.assign(result, {\n        screen_color_depth: number(screen.colorDepth),\n        screen_pixel_depth: number(screen.pixelDepth),\n        screen_orientation_type: screen.orientation && screen.orientation.type\n    });\n\n    return result;\n}\n","import { number } from '../number';\n\n/**\n * getMaxNestLevel: Determine the largest DOM depth in the document or under a base element\n * @param {number} [depth=2] Used for recursion\n * @returns {number}\n */\nfunction getMaxNestLevel(depth = 1) {\n    return document.querySelector(`${'*>'.repeat(depth)}*`)\n        ? getMaxNestLevel(depth + 1)\n        : depth;\n}\n\n/**\n * Get stats on a DOM tree safely\n * @returns {object}\n */\nexport function dom() {\n    try {\n        return {\n            final_dom_node_count: number(document.querySelectorAll('*').length),\n            final_dom_nest_depth: number(getMaxNestLevel()),\n            final_html_size: number(document.querySelector('html').outerHTML.length)\n        };\n    } catch (error) {\n        return {\n            final_dom_node_count: undefined,\n            final_dom_nest_depth: undefined,\n            final_html_size: undefined\n        };\n    }\n}\n","/**\n * @param {string}\n * @returns {string}\n */\nexport const snakeCase = (str) => str\n    .replace(/([A-Z])/g, '_$1')\n    .replace(/-/g, '_')\n    .toLowerCase()\n    .replace(/_j_s_/g, '_js_');\n","import { number } from '../number';\nimport { snakeCase } from '../snake-case';\n\n/**\n * @type {string[]}\n */\nconst METRICS = [\n    'jsHeapSizeLimit',\n    'totalJSHeapSize',\n    'usedJSHeapSize'\n];\n\n/**\n * @returns {object}\n */\nexport function memory() {\n    const { memory } = window.performance || {};\n    if (!memory) {\n        return {};\n    }\n\n    return Object.assign(\n        ...METRICS.map(\n            (metric) => ({ [snakeCase(metric)]: number(memory[metric]) })\n        )\n    );\n}\n","import { number } from '../number';\nimport { snakeCase } from '../snake-case';\n\n/**\n * @type {string[]}\n */\nconst METRICS = [\n    'connectEnd',\n    'connectStart',\n    'decodedBodySize',\n    'domainLookupEnd',\n    'domainLookupStart',\n    'domComplete',\n    'domContentLoadedEventEnd',\n    'domContentLoadedEventStart',\n    'domInteractive',\n    'domLoading',\n    'encodedBodySize',\n    'fetchStart',\n    'loadEventEnd',\n    'loadEventStart',\n    'navigationStart',\n    'redirectEnd',\n    'redirectStart',\n    'requestStart',\n    'responseEnd',\n    'responseStart',\n    'secureConnectionStart',\n    'transferSize',\n    'unloadEventEnd',\n    'unloadEventStart'\n];\n\n/**\n * @returns {object}\n */\nexport function navigation() {\n    const { performance } = window;\n    if (!performance || !performance.getEntriesByType) {\n        return {};\n    }\n\n    const navigationEntries = performance.getEntriesByType('navigation');\n\n    // PerformanceNavigationTiming interface\n    if (navigationEntries.length) {\n        return Object.assign(\n            {},\n            ...[].concat(\n                ...navigationEntries.map(\n                    (entry) => METRICS.filter(\n                        (metric) => !Number.isNaN(entry[metric])\n                    ).map(\n                        (metric) => ({ [snakeCase(metric)]: number(entry[metric]) })\n                    )\n                )\n            )\n        );\n    }\n\n    // Fall back to obsolete PerformanceTiming interface\n    const { timing } = performance;\n    if (!timing) { return {}; }\n\n    const start = performance.timeOrigin || timing.navigationStart;\n    if (!start) { return {}; }\n\n    return METRICS.reduce(\n        (accumulator, metric) => {\n            const value = timing[metric] - start;\n            accumulator[snakeCase(metric)] = value < 0\n                ? undefined\n                : number(value)\n            ;\n\n            return accumulator;\n        },\n        {}\n    );\n}\n","import { number } from '../number';\nimport { snakeCase } from '../snake-case';\n\n/**\n * Retrieve all paint entries\n * @returns {object}\n */\nexport function paint() {\n    const { performance } = window;\n\n    if (!performance || !performance.getEntriesByType) {\n        return {};\n    }\n\n    return Object.assign(\n        {},\n        ...[].concat(\n            ...performance.getEntriesByType('paint').map(\n                ({ name, startTime }) => ({ [snakeCase(name)]: number(startTime) })\n            )\n        )\n    );\n}\n","import { navigation } from '../navigation';\nimport { paint } from '../paint';\nimport { assets } from '../assets';\nimport { connection } from '../connection';\nimport { memory } from '../memory';\nimport { display } from '../display';\nimport { dom } from '../dom';\n\n/**\n * @returns {object}\n */\nexport const all = () => Object.assign(\n    {},\n    navigation(),\n    paint(),\n    assets(),\n    connection(),\n    memory(),\n    display(),\n    dom()\n);\n","/**\n * Check window frames per second rate\n * @param {number} sample Number of seconds to check\n * @returns {number?}\n */\nexport function fps({ sample = 1 } = {}) {\n    return new Promise(\n        ((resolve) => {\n            const { requestAnimationFrame } = window;\n            if (!requestAnimationFrame) {\n                resolve(undefined);\n            }\n\n            const start = window.performance.now();\n            const end = start + (1000 * sample);\n            let frames = 0;\n            requestAnimationFrame(count);\n\n            function count() {\n                if (window.performance.now() > end) {\n                    resolve(frames / sample);\n                } else {\n                    ++frames;\n                    requestAnimationFrame(count);\n                }\n            }\n        })\n    );\n}\n","/**\n * Add a 'measure' entry measuring the execution of a function\n * @param  {Function} fn\n * @param  {String}   name\n * @return {Any}           original method return value\n */\nexport async function measure(fn, name) {\n    const { performance } = window;\n    const unique = Math.random().toString(32).substr(2);\n\n    const [start, end] = ['start', 'end'].map(\n        (suffix) => [name, suffix, unique].join('-')\n    );\n\n    performance.mark(start);\n    const result = await fn();\n\n    performance.mark(end);\n    performance.measure(name, start, end);\n    performance.clearMarks(start);\n    performance.clearMarks(end);\n\n    return result;\n}\n","export { assets } from './assets';\nexport { connection } from './connection';\nexport { display } from './display';\nexport { dom } from './dom';\nexport { memory } from './memory';\nexport { navigation } from './navigation';\nexport { paint } from './paint';\n\nexport { all } from './all';\nexport { fps } from './fps';\nexport { measure } from './measure';\n","// import { getLCP, getFID, getCLS } from 'web-vitals';\nimport { measure, fps, all } from '../src/index.js';\n\nObject.assign(\n    window,\n    { measure, fps, all }\n);\n"]}